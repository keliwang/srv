name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-latest]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build
      run: cargo build --release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: srv-${{ matrix.os }}
        path: ./target/release/srv

  publish:
    name: publish
    runs-on: ubuntu-16.04
    needs: ['build']
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v1
      with:
        name: srv-macos-latest
        path: assets/srv-macos
    - uses: actions/download-artifact@v1
      with:
        name: srv-ubuntu-16.04
        path: assets/srv-linux
    - run: ls -all ./assets
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: assets/srv-macos/srv
        asset_name: srv-macos
        asset_content_type: application/octet-stream
    
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: assets/srv-linux/srv
        asset_name: srv-linux
